#!/bin/sh
META_NAME=ZJOT_ACC
APP=$(basename $0)

DirPath () {
    [ ! -z "$ZJOT_ACC" ] && local _path=${ZJOT_ACC}
    [   -z "$ZJOT_ACC" ] && local _path=${HOME}/${META_NAME}
    >/dev/null 2>/dev/null mkdir -p ${_path}
    echo ${_path}
}

DirStat () {
    [   -d $(DirPath) ] && return 0
    [ ! -d $(DirPath) ] && return 1
}

DD_list () {
    local DD=$(DirPath)
    [ -d "$DD" ] || return 99
    $(/bin/ls -1 ${DD}/*$1 > /dev/null 2> /dev/null) || return $?
    /bin/ls -1 ${DD}/*$1
}

DD_first () {
    for path in $( DD_list $* ); do
        echo $path
        break
    done
}

main () {
    local o=$1 ; shift
    case .${o} in
        .join)   join   $* ; return ;;
        .report) report $* ; return ;;
        .list)   list   $* ; return ;;
        .new)    newjot $* ; return ;;
        *)       usage  $* ; return ;;
    esac
}

usage () {
    echo "${APP} -- a note taking and retrieval system."
    echo "usage:"
    echo "    ${APP} report [q] -- check prerequisites"
    echo "    ${APP} list       -- list jots"
    echo "    ${APP} new        -- make new jot"
    echo "    ${APP} join       -- cat all [.zjot] into a new [.zjots]"
    echo "    ${APP} help       -- print this help message"
}

join () {
    acc=$(DD_first .zjot)s
    [ "$acc" = "s"  ] && return
    [ -f "$acc"     ] && echo ${acc} already exists
    [ -f "$acc"     ] && return
    for zjot in $(DD_list .zjot); do
        cat $zjot >> $acc
        rm $zjot
    done
}

report () {
    DirStat && {
        echo "${APP}:"
        echo "        Using [\$$META_NAME] == [$(DirPath)]"
    } || {
        echo "${APP}:"
        echo "        Runtime Error."
        echo "        Using [\$$META_NAME] == [$(DirPath)]"
        echo "        But no directory could be created at this path."
    }
}

list () {
    echo "# $(DirPath)"
    dump () { echo "----------------------" $(basename $1); cat $1; }
    DirStat -v || return
    for path in $( DD_list acc    ); do dump $path; done
    for path in $( DD_list .zjots ); do dump $path; done
    echo "---------------------- zjot"
    for path in $(DD_list .zjot   ); do cat  $path; done
}

newjot () {
    DirStat || report
    DirStat || return
    list

    acc="$*"
    printf ">>>>>>>>>>>>>>>>>>>>>> ${acc} | "
    read jot

    [ ! "${jot}" = "" ] && jot="| ${jot}"
    [ ! "${acc}" = "" ] && jot="${acc} ${jot}"
    [   "${jot}" = "" ] && return

    now=$(date "+%Y%m%dT%H%M%S")
    log=$(DirPath)/${now}.zjot
    line="${now} [zjot] ${jot}"
    echo "${line}" > ${log}

    echo
    list
}

main $*
